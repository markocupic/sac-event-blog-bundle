{% do addJavascriptResource('assets/contao-component-vue-js/vue/dist/vue.global.prod.js|static') %}

{% if publishState is constant('\\Markocupic\\SacEventBlogBundle\\Config\\PublishState::STILL_IN_PROGRESS') %}
    <div class="me-2">
        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#ModalChangePublishState">
            <i class="fa-solid fa-eye"></i> Veröffentlichen
        </button>
    </div>

    <div id="ModalChangePublishState" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="ModalChangePublishState" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-fullscreen-xl-down" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bericht zur Überprüfung freigeben</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Schliessen"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-dark">
                        <i class="fa-solid fa-check-circle fa-w-16"></i>
                        <div>
                            Hier kannst du deinen Bericht zur Überprüfung durch den/die Tourenleiter/in und die Redaktion freigeben.
                            <br>
                            <strong>Achtung! Führe diesen Schritt nur aus, wenn du sicher bist, dass du keine Änderungen am Bericht mehr machen willst.
                                Fotos können ebenfalls nicht mehr hinzugefügt oder geändert werden.
                                <br>
                                Du kannst diesen Schritt danach nicht mehr rückgängig machen und das Formular bleibt für weitere Eingaben gesperrt.
                            </strong>
                            <br>
                            Der/die Tourenleiter/in wird benachrichtigt und er/sie wird deinen Bericht auf inhaltliche Korrektheit überprüfen.
                            <br>
                            Nach der Prüfung durch den/die Tourenleiter/in wird dein Bericht durch die Redaktion auf Rechtschreibung geprüft und anschliessend veröffentlicht.
                            Danach ist dein Bericht auf der <a href="https://www.sac-pilatus.ch" target="_blank">Startseite</a> öffentlich für alle sichtbar.
                        </div>
                    </div>
                    <div class="mt-5">
                        <form id="changePublishStateForm">
                            <div v-if="publishState < 2" class="d-grid gap-2">
                                <button id="publishEventBlogBtn" class="btn btn-lg btn-danger btn-block" v-if="!pendingRequest" @click="publishBlog">
                                    <i class="fa-solid fa-eye" aria-hidden="true"></i> Bericht zur Veröffentlichung freigeben
                                </button>
                                <button id="publishEventBlogBtnPending" class="btn btn-lg btn-danger btn-block" v-if="pendingRequest" disabled>
                                    <i class="fa-solid fa-spinner fa-pulse" aria-hidden="true"></i> Bitte warten
                                </button>
                            </div>
                            <div v-if="publishState === 2" class="alert alert-primary">
                                <i class="fa-solid fa-grin fa-w-16" aria-hidden="true"></i>
                                <div>
                                    Dein Bericht wurde erfolgreich zur Überprüfung freigegeben. Die Seite wird jetzt neu geladen.
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script{{ attrs().setIfExists('nonce', csp_nonce('script-src')) }}>
        // Vue js
        const {createApp} = Vue

        // Instantiate vue.js application
        const app = createApp({
            data() {
                return {
                    publishState: {{ constant('\\Markocupic\\SacEventBlogBundle\\Config\\PublishState::STILL_IN_PROGRESS') }},
                    pendingRequest: false,
                };
            },

            methods: {
                publishBlog: async function (event) {

                    // Without event.preventDefault();
                    // with Firefox will create a NS_BINDING_ABORTED issue
                    // and redirect before getting the response
                    event.preventDefault();

                    let self = this;
                    this.pendingRequest = true;

                    const rt = '{{ request_token }}';
                    const moduleId = '{{ id }}';
                    const urlParams = new URLSearchParams(window.location.search);

                    let buttons = document.querySelectorAll('.event-blog-form-buttons > div > .btn');

                    // Remove buttons
                    for (let i = 0; i < buttons.length; ++i) {
                        buttons[i].classList.add('d-none');
                    }

                    // Create form
                    const formData = new FormData();
                    formData.append('REQUEST_TOKEN', rt);
                    formData.append('publishState', String(this.publishState + 1));
                    formData.append('moduleId', moduleId);
                    formData.append('eventId', urlParams.get('eventId'));

                    // Fetch
                    await fetch('ajaxMemberDashboardWriteEventBlog/setPublishState', {
                            method: 'POST',
                            headers: {
                                'x-requested-with': 'XMLHttpRequest',
                            },
                            body: formData,
                        }
                    ).then(function (res) {
                        return res.json();
                    }).then(function (json) {
                        if (json['status'] === 'success') {
                            window.setTimeout(function () {
                                self.publishState = parseInt(json['publishState']);
                                window.setTimeout(function () {
                                    window.location.reload();
                                }, 4000);
                            }, 2000);
                        } else {
                            window.location.reload();
                        }
                        return json;
                    });
                }
            }
        });
        app.mount('#changePublishStateForm');
    </script>
{% endif %}
